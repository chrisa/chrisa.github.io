<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dtrace on Chris&#39;s Blog</title>
    <link>https://chrisa.github.io/categories/dtrace/</link>
    <description>Recent content in dtrace on Chris&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Jan 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://chrisa.github.io/categories/dtrace/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Perl ustack helper?</title>
      <link>https://chrisa.github.io/blog/2013/01/26/a-perl-ustack-helper/</link>
      <pubDate>Sat, 26 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://chrisa.github.io/blog/2013/01/26/a-perl-ustack-helper/</guid>
      <description>I&amp;rsquo;ve done some work with DTrace and Perl, using my Devel::DTrace::Provider and Andy Armstrong&amp;rsquo;s Devel::DTrace, but there&amp;rsquo;s never been a ustack helper: because of the structure of the Perl interpreter, it&amp;rsquo;s impossible to write one &amp;ndash; at least, in the intended manner&amp;hellip;</description>
    </item>
    
    <item>
      <title>libusdt - creating DTrace providers at runtime</title>
      <link>https://chrisa.github.io/blog/2011/12/04/libusdt-runtime-dtrace-providers/</link>
      <pubDate>Sun, 04 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://chrisa.github.io/blog/2011/12/04/libusdt-runtime-dtrace-providers/</guid>
      <description>With this post I&amp;rsquo;d like to introduce libusdt, a library for creating DTrace USDT providers at runtime, intended as the basis for implementing custom DTrace providers in dynamic languages, but applicable wherever the provider definition isn&amp;rsquo;t known at compile time.</description>
    </item>
    
  </channel>
</rss>
